# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/sde";
      fsType = "ext4";
    };

  fileSystems."/mnt/wsl" =
    {
      device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/mnt/wsl/docker-desktop/shared-sockets/guest-services" =
    {
      device = "none";
      fsType = "tmpfs";
    };

  # fileSystems."/usr/lib/wsl/drivers" =
  #   {
  #     device = "drivers";
  #     fsType = "drvfs";
  #   };
  #
  # fileSystems."/usr/lib/wsl/lib" =
  #   {
  #     device = "lib";
  #     fsType = "drvfs";
  #   };

  fileSystems."/mnt/c" =
    {
      device = "C:";
      fsType = "drvfs";
    };

  fileSystems."/mnt/d" =
    {
      device = "D:";
      fsType = "drvfs";
    };

  fileSystems."/mnt/f" =
    {
      device = "F:";
      fsType = "drvfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.bond0.useDHCP = lib.mkDefault true;
  # networking.interfaces.bonding_masters.useDHCP = lib.mkDefault true;
  # networking.interfaces.dummy0.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.sit0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tunl0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
